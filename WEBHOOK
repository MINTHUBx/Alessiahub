-- Server-side Webhook Script
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

local sendEvent = ReplicatedStorage:WaitForChild("SendDiscordWebhook")

local WEBHOOK_URL = "https://discord.com/api/webhooks/1427117977899237406/S4r8I4aIhw9l4TJeBKy6AFIJeCFZOh8gfQ0wqoa8QFv9o7nL1FnO9--4t9CQm-aCIWbL"

-- Lista de objetos tal como aparecen en el juego
local objectNames = {
    "La Grande Combinasion", "Ketchuru and Musturu", "Ketupat Kepat", "Burguro and Fryuro", "La Supreme Combinasion",
    "Tacorita bicicleta", "Los tacoritas", "Garama and Madundung", "Dragon Cannelloni", "Esok Sekolah",
    "Tang Tang Keletang", "Strawberry Elephant", "La Secret Combinasion", "Tralaledon", "Eviledon",
    "Spaghetti Tualetti", "Los Hotspotsitos", "Los Mobilis", "Los 67", "Money Money Puggy",
    "Celularcini Viciosini", "Los Bros", "Las Sis", "Los Primos", "La Spooky Grande",
    "Spooky and Pumpky", "Chillin Chili", "Tictac Sahur", "La Extinct Grande", "Nuclearo Dinossauro"
}

-- Función para comparar ignorando mayúsculas/minúsculas
local function equalsIgnoreCase(a, b)
    return string.lower(a) == string.lower(b)
end

-- Buscar objetos
local function findObjects()
    local found = {}
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("BasePart") or obj:IsA("Model") then
            for _, name in ipairs(objectNames) do
                if equalsIgnoreCase(obj.Name, name) and not table.find(found, obj.Name) then
                    table.insert(found, obj.Name)
                end
            end
        end
    end
    return found
end

-- Función de envío
local function sendWebhook(player, privateServerLink)
    local objectsFound = findObjects()
    local descriptionText = #objectsFound > 0 and table.concat(objectsFound, ", ") or "No monitored objects found."

    local data = {
        ["username"] = "Brainrot Detector",
        ["content"] = "@everyone",
        ["embeds"] = {{
            ["title"] = "Brainrot Detection Report",
            ["description"] = descriptionText,
            ["color"] = 65280,
            ["fields"] = {
                {["name"] = "Player", ["value"] = player.Name},
                {["name"] = "Players in Server", ["value"] = tostring(#Players:GetPlayers())},
                {["name"] = "Private Server Link", ["value"] = privateServerLink or "N/A"}
            },
            ["footer"] = {["text"] = "PlaceId: " .. tostring(game.PlaceId)}
        }}
    }

    local success, err = pcall(function()
        HttpService:PostAsync(WEBHOOK_URL, HttpService:JSONEncode(data), Enum.HttpContentType.ApplicationJson)
    end)

    if success then
        print("✅ Webhook sent successfully for player:", player.Name)
    else
        warn("❌ Failed to send webhook:", err)
    end
end

sendEvent.OnServerEvent:Connect(function(player, privateServerLink)
    sendWebhook(player, privateServerLink)
end)

